"use strict";(self.webpackChunkcircuits=self.webpackChunkcircuits||[]).push([[51362],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(r),m=a,f=s["".concat(c,".").concat(m)]||s[m]||u[m]||i;return r?n.createElement(f,o(o({ref:t},d),{},{components:r})):n.createElement(f,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},65847:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={sidebar_position:80,tags:["._tags"]},o="Collision Data Get Normal",l={unversionedId:"documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",id:"documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",title:"Collision Data Get Normal",description:'Gets unit vector specifying the direction of an object/player from center specified in "Overlap Sphere" chip.',source:"@site/docs/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819.md",sourceDirName:"documentation/chips",slug:"/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",permalink:"/Circuits/Website/docs/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",draft:!1,editUrl:"https://github.com/FunnPunn/RecRoom-Circuits/docs/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819.md",tags:[{label:"._tags",permalink:"/Circuits/Website/docs/tags/tags"}],version:"current",sidebarPosition:80,frontMatter:{sidebar_position:80,tags:["._tags"]},sidebar:"tutorialSidebar",previous:{title:"Collision Data Get Distance",permalink:"/Circuits/Website/docs/documentation/chips/c3fc963c-6d73-4d88-9c9b-95e9faae219f"},next:{title:"Collision Data Get Object",permalink:"/Circuits/Website/docs/documentation/chips/8c8931da-1a8e-4164-a3a5-0f68db8cafb5"}},c={},p=[{value:"Gets unit vector specifying the direction of an object/player from center specified in &quot;Overlap Sphere&quot; chip.",id:"gets-unit-vector-specifying-the-direction-of-an-objectplayer-from-center-specified-in-overlap-sphere-chip",level:3},{value:"Ports:",id:"ports",level:2},{value:"Properties:",id:"properties",level:2},{value:"Info:",id:"info",level:2}],d={toc:p},s="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"collision-data-get-normal"},"Collision Data Get Normal"),(0,a.kt)("h3",{id:"gets-unit-vector-specifying-the-direction-of-an-objectplayer-from-center-specified-in-overlap-sphere-chip"},'Gets unit vector specifying the direction of an object/player from center specified in "Overlap Sphere" chip.'),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"th",src:"https://images-ext-2.discordapp.net/external/MPmIaQzlEPmgGWlgi-WxBBXt0Bjv_zWPkg1y1f_sy3s/https/www.recroomcircuits.com/image/circuit/absolute-value?width=206&height=108",alt:null}))))),(0,a.kt)("h2",{id:"ports"},"Ports:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Input Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Input Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Target"),(0,a.kt)("td",{parentName:"tr",align:null},"collision data")))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Output Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Output Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Normal"),(0,a.kt)("td",{parentName:"tr",align:null},"vector3")))),(0,a.kt)("h2",{id:"properties"},"Properties:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Is Trolling Risk?"),(0,a.kt)("td",{parentName:"tr",align:null},"No.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Is Beta?"),(0,a.kt)("td",{parentName:"tr",align:null},"No.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Chip UUID"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"ced470f8-dd9d-4e67-a654-7c7e1a3e7819"))))),(0,a.kt)("h2",{id:"info"},"Info:"),(0,a.kt)("p",null,"._extrainfo"))}u.isMDXComponent=!0}}]);